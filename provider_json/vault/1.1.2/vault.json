{"provider_arguments":[],"resources":{"approle_auth_backend_login":{"arguments":[{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"role_id","kind":"String(R)","info":"The RoleID to log in with."},{"word":"secret_id","kind":"String(O)","info":"The SecretID to log in with."}],"attributes":[{"word":"accessor","kind":"String","info":"The accessor for the token."},{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"client_token","kind":"String","info":"The token."},{"word":"lease_duration","kind":"Int","info":"How long the token is valid for."},{"word":"lease_started","kind":"String","info":"The timestamp the lease started on, as determined by the machine running Terraform."},{"word":"metadata","kind":"Map","info":"Metadata associated with the token."},{"word":"policies","kind":"List","info":"Policies set on the token."},{"word":"renewable","kind":"Bool","info":"Whether the token is renewable or not."},{"word":"role_id","kind":"String","info":"The RoleID to log in with."},{"word":"secret_id","kind":"String","info":"The SecretID to log in with."},{"word":"id","kind":"String"}]},"approle_auth_backend_role":{"arguments":[{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"bind_secret_id","kind":"Bool(O)","info":"Whether or not to require secret_id to be present when logging in using this AppRole."},{"word":"bound_cidr_list","kind":"Set(O)","info":"List of CIDR blocks that can log in using the AppRole."},{"word":"period","kind":"Int(O)","info":"Number of seconds to set the TTL to for issued tokens upon renewal. Makes the token a periodic token, which will never expire as long as it is renewed before the TTL each period."},{"word":"policies","kind":"Set(O)","info":"Policies to be set on tokens issued using this AppRole."},{"word":"role_id","kind":"String(O)","info":"The RoleID of the role. Autogenerated if not set."},{"word":"role_name","kind":"String(R)","info":"Name of the role."},{"word":"secret_id_num_uses","kind":"Int(O)","info":"Number of times which a particular SecretID can be used to fetch a token from this AppRole, after which the SecretID will expire. Leaving this unset or setting it to 0 will allow unlimited uses."},{"word":"secret_id_ttl","kind":"Int(O)","info":"Number of seconds a SecretID remains valid for."},{"word":"token_max_ttl","kind":"Int(O)","info":"Number of seconds after which issued tokens can no longer be renewed."},{"word":"token_num_uses","kind":"Int(O)","info":"Number of times issued tokens can be used. Setting this to 0 or leaving it unset means unlimited uses."},{"word":"token_ttl","kind":"Int(O)","info":"Default number of seconds to set as the TTL for issued tokens and at renewal time."}],"attributes":[{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"bind_secret_id","kind":"Bool","info":"Whether or not to require secret_id to be present when logging in using this AppRole."},{"word":"bound_cidr_list","kind":"Set","info":"List of CIDR blocks that can log in using the AppRole."},{"word":"period","kind":"Int","info":"Number of seconds to set the TTL to for issued tokens upon renewal. Makes the token a periodic token, which will never expire as long as it is renewed before the TTL each period."},{"word":"policies","kind":"Set","info":"Policies to be set on tokens issued using this AppRole."},{"word":"role_id","kind":"String","info":"The RoleID of the role. Autogenerated if not set."},{"word":"role_name","kind":"String","info":"Name of the role."},{"word":"secret_id_num_uses","kind":"Int","info":"Number of times which a particular SecretID can be used to fetch a token from this AppRole, after which the SecretID will expire. Leaving this unset or setting it to 0 will allow unlimited uses."},{"word":"secret_id_ttl","kind":"Int","info":"Number of seconds a SecretID remains valid for."},{"word":"token_max_ttl","kind":"Int","info":"Number of seconds after which issued tokens can no longer be renewed."},{"word":"token_num_uses","kind":"Int","info":"Number of times issued tokens can be used. Setting this to 0 or leaving it unset means unlimited uses."},{"word":"token_ttl","kind":"Int","info":"Default number of seconds to set as the TTL for issued tokens and at renewal time."},{"word":"id","kind":"String"}]},"approle_auth_backend_role_secret_id":{"arguments":[{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"cidr_list","kind":"Set(O)","info":"List of CIDR blocks that can log in using the SecretID."},{"word":"metadata","kind":"String(O)","info":"JSON-encoded secret data to write."},{"word":"role_name","kind":"String(R)","info":"Name of the role."},{"word":"secret_id","kind":"String(O)","info":"The SecretID to be managed. If not specified, Vault auto-generates one."}],"attributes":[{"word":"accessor","kind":"String","info":"The unique ID used to access this SecretID."},{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"cidr_list","kind":"Set","info":"List of CIDR blocks that can log in using the SecretID."},{"word":"metadata","kind":"String","info":"JSON-encoded secret data to write."},{"word":"role_name","kind":"String","info":"Name of the role."},{"word":"secret_id","kind":"String","info":"The SecretID to be managed. If not specified, Vault auto-generates one."},{"word":"id","kind":"String"}]},"auth_backend":{"arguments":[{"word":"description","kind":"String(O)","info":"The description of the auth backend"},{"word":"path","kind":"String(O)","info":"path to mount the backend. This defaults to the type."},{"word":"type","kind":"String(R)","info":"Name of the auth backend"}],"attributes":[{"word":"description","kind":"String","info":"The description of the auth backend"},{"word":"path","kind":"String","info":"path to mount the backend. This defaults to the type."},{"word":"type","kind":"String","info":"Name of the auth backend"},{"word":"id","kind":"String"}]},"aws_auth_backend_cert":{"arguments":[{"word":"aws_public_cert","kind":"String(R)","info":"Base64 encoded AWS Public key required to verify PKCS7 signature of the EC2 instance metadata."},{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"cert_name","kind":"String(R)","info":"Name of the certificate to configure."},{"word":"type","kind":"String(O)","info":"The type of document that can be verified using the certificate. Must be either \"pkcs7\" or \"identity\"."}],"attributes":[{"word":"aws_public_cert","kind":"String","info":"Base64 encoded AWS Public key required to verify PKCS7 signature of the EC2 instance metadata."},{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"cert_name","kind":"String","info":"Name of the certificate to configure."},{"word":"type","kind":"String","info":"The type of document that can be verified using the certificate. Must be either \"pkcs7\" or \"identity\"."},{"word":"id","kind":"String"}]},"aws_auth_backend_client":{"arguments":[{"word":"access_key","kind":"String(O)","info":"AWS Access key with permissions to query AWS APIs."},{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"ec2_endpoint","kind":"String(O)","info":"URL to override the default generated endpoint for making AWS EC2 API calls."},{"word":"iam_endpoint","kind":"String(O)","info":"URL to override the default generated endpoint for making AWS IAM API calls."},{"word":"iam_server_id_header_value","kind":"String(O)","info":"The value to require in the X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests that are used in the iam auth method."},{"word":"secret_key","kind":"String(O)","info":"AWS Secret key with permissions to query AWS APIs."},{"word":"sts_endpoint","kind":"String(O)","info":"URL to override the default generated endpoint for making AWS STS API calls."}],"attributes":[{"word":"access_key","kind":"String","info":"AWS Access key with permissions to query AWS APIs."},{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"ec2_endpoint","kind":"String","info":"URL to override the default generated endpoint for making AWS EC2 API calls."},{"word":"iam_endpoint","kind":"String","info":"URL to override the default generated endpoint for making AWS IAM API calls."},{"word":"iam_server_id_header_value","kind":"String","info":"The value to require in the X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests that are used in the iam auth method."},{"word":"secret_key","kind":"String","info":"AWS Secret key with permissions to query AWS APIs."},{"word":"sts_endpoint","kind":"String","info":"URL to override the default generated endpoint for making AWS STS API calls."},{"word":"id","kind":"String"}]},"aws_auth_backend_identity_whitelist":{"arguments":[{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"disable_periodic_tidy","kind":"Bool(O)","info":"If true, disables the periodic tidying of the identiy whitelist entries."},{"word":"safety_buffer","kind":"Int(O)","info":"The amount of extra time that must have passed beyond the roletag expiration, before it's removed from backend storage."}],"attributes":[{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"disable_periodic_tidy","kind":"Bool","info":"If true, disables the periodic tidying of the identiy whitelist entries."},{"word":"safety_buffer","kind":"Int","info":"The amount of extra time that must have passed beyond the roletag expiration, before it's removed from backend storage."},{"word":"id","kind":"String"}]},"aws_auth_backend_login":{"arguments":[{"word":"backend","kind":"String(O)","info":"AWS Auth Backend to read the token from."},{"word":"iam_http_request_method","kind":"String(O)","info":"The HTTP method used in the signed request."},{"word":"iam_request_body","kind":"String(O)","info":"The Base64-encoded body of the signed request."},{"word":"iam_request_headers","kind":"String(O)","info":"The Base64-encoded, JSON serialized representation of the sts:GetCallerIdentity HTTP request headers."},{"word":"iam_request_url","kind":"String(O)","info":"The Base64-encoded HTTP URL used in the signed request."},{"word":"identity","kind":"String(O)","info":"Base64-encoded EC2 instance identity document to authenticate with."},{"word":"nonce","kind":"String(O)","info":"The nonce to be used for subsequent login requests."},{"word":"pkcs7","kind":"String(O)","info":"PKCS7 signature of the identity document to authenticate with, with all newline characters removed."},{"word":"role","kind":"String(O)","info":"AWS Auth Role to read the token from."},{"word":"signature","kind":"String(O)","info":"Base64-encoded SHA256 RSA signature of the instance identtiy document to authenticate with."}],"attributes":[{"word":"accessor","kind":"String","info":"The accessor returned from Vault for this token."},{"word":"auth_type","kind":"String","info":"The auth method used to generate this token."},{"word":"backend","kind":"String","info":"AWS Auth Backend to read the token from."},{"word":"client_token","kind":"String","info":"The token returned by Vault."},{"word":"iam_http_request_method","kind":"String","info":"The HTTP method used in the signed request."},{"word":"iam_request_body","kind":"String","info":"The Base64-encoded body of the signed request."},{"word":"iam_request_headers","kind":"String","info":"The Base64-encoded, JSON serialized representation of the sts:GetCallerIdentity HTTP request headers."},{"word":"iam_request_url","kind":"String","info":"The Base64-encoded HTTP URL used in the signed request."},{"word":"identity","kind":"String","info":"Base64-encoded EC2 instance identity document to authenticate with."},{"word":"lease_duration","kind":"Int","info":"Lease duration in seconds relative to the time in lease_start_time."},{"word":"lease_start_time","kind":"String","info":"Time at which the lease was read, using the clock of the system where Terraform was running"},{"word":"metadata","kind":"Map","info":"The metadata reported by the Vault server."},{"word":"nonce","kind":"String","info":"The nonce to be used for subsequent login requests."},{"word":"pkcs7","kind":"String","info":"PKCS7 signature of the identity document to authenticate with, with all newline characters removed."},{"word":"policies","kind":"List","info":"The policies assigned to this token."},{"word":"renewable","kind":"Bool","info":"True if the duration of this lease can be extended through renewal."},{"word":"role","kind":"String","info":"AWS Auth Role to read the token from."},{"word":"signature","kind":"String","info":"Base64-encoded SHA256 RSA signature of the instance identtiy document to authenticate with."},{"word":"id","kind":"String"}]},"aws_auth_backend_role":{"arguments":[{"word":"allow_instance_migration","kind":"Bool(O)","info":"When true, allows migration of the underlying instance where the client resides. Use with caution."},{"word":"auth_type","kind":"String(O)","info":"The auth type permitted for this role."},{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"bound_account_id","kind":"String(O)","info":"Only EC2 instances with this account ID in their identity document will be permitted to log in."},{"word":"bound_ami_id","kind":"String(O)","info":"Only EC2 instances using this AMI ID will be permitted to log in."},{"word":"bound_iam_instance_profile_arn","kind":"String(O)","info":"Only EC2 instances associated with an IAM instance profile ARN that matches this value will be permitted to log in."},{"word":"bound_iam_principal_arn","kind":"String(O)","info":"The IAM principal that must be authenticated using the iam auth method."},{"word":"bound_iam_role_arn","kind":"String(O)","info":"Only EC2 instances that match this IAM role ARN will be permitted to log in."},{"word":"bound_region","kind":"String(O)","info":"Only EC2 instances in this region will be permitted to log in."},{"word":"bound_subnet_id","kind":"String(O)","info":"Only EC2 instances associated with this subnet ID will be permitted to log in."},{"word":"bound_vpc_id","kind":"String(O)","info":"Only EC2 instances associated with this VPC ID will be permitted to log in."},{"word":"disallow_reauthentication","kind":"Bool(O)","info":"When true, only allows a single token to be granted per instance ID."},{"word":"inferred_aws_region","kind":"String(O)","info":"The region to search for the inferred entities in."},{"word":"inferred_entity_type","kind":"String(O)","info":"The type of inferencing Vault should do."},{"word":"max_ttl","kind":"Int(O)","info":"The maximum allowed lifetime of tokens issued using this role."},{"word":"period","kind":"Int(O)","info":"The duration in which a token should be renewed. At each renewal, the token's TTL will be set to the value of this parameter."},{"word":"policies","kind":"List(O)","info":"Policies to be set on tokens issued using this role."},{"word":"resolve_aws_unique_ids","kind":"Bool(O)","info":"Whether or not Vault should resolve the bound_iam_principal_arn to an AWS Unique ID. When true, deleting a principal and recreating it with the same name won't automatically grant the new principal the same roles in Vault that the old principal had."},{"word":"role","kind":"String(R)","info":"Name of the role."},{"word":"role_tag","kind":"String(O)","info":"The key of the tag on EC2 instance to use for role tags."},{"word":"ttl","kind":"Int(O)","info":"The TTL period of tokens issued using this role, provided as the number of minutes."}],"attributes":[{"word":"allow_instance_migration","kind":"Bool","info":"When true, allows migration of the underlying instance where the client resides. Use with caution."},{"word":"auth_type","kind":"String","info":"The auth type permitted for this role."},{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"bound_account_id","kind":"String","info":"Only EC2 instances with this account ID in their identity document will be permitted to log in."},{"word":"bound_ami_id","kind":"String","info":"Only EC2 instances using this AMI ID will be permitted to log in."},{"word":"bound_iam_instance_profile_arn","kind":"String","info":"Only EC2 instances associated with an IAM instance profile ARN that matches this value will be permitted to log in."},{"word":"bound_iam_principal_arn","kind":"String","info":"The IAM principal that must be authenticated using the iam auth method."},{"word":"bound_iam_role_arn","kind":"String","info":"Only EC2 instances that match this IAM role ARN will be permitted to log in."},{"word":"bound_region","kind":"String","info":"Only EC2 instances in this region will be permitted to log in."},{"word":"bound_subnet_id","kind":"String","info":"Only EC2 instances associated with this subnet ID will be permitted to log in."},{"word":"bound_vpc_id","kind":"String","info":"Only EC2 instances associated with this VPC ID will be permitted to log in."},{"word":"disallow_reauthentication","kind":"Bool","info":"When true, only allows a single token to be granted per instance ID."},{"word":"inferred_aws_region","kind":"String","info":"The region to search for the inferred entities in."},{"word":"inferred_entity_type","kind":"String","info":"The type of inferencing Vault should do."},{"word":"max_ttl","kind":"Int","info":"The maximum allowed lifetime of tokens issued using this role."},{"word":"period","kind":"Int","info":"The duration in which a token should be renewed. At each renewal, the token's TTL will be set to the value of this parameter."},{"word":"policies","kind":"List","info":"Policies to be set on tokens issued using this role."},{"word":"resolve_aws_unique_ids","kind":"Bool","info":"Whether or not Vault should resolve the bound_iam_principal_arn to an AWS Unique ID. When true, deleting a principal and recreating it with the same name won't automatically grant the new principal the same roles in Vault that the old principal had."},{"word":"role","kind":"String","info":"Name of the role."},{"word":"role_tag","kind":"String","info":"The key of the tag on EC2 instance to use for role tags."},{"word":"ttl","kind":"Int","info":"The TTL period of tokens issued using this role, provided as the number of minutes."},{"word":"id","kind":"String"}]},"aws_auth_backend_role_tag":{"arguments":[{"word":"allow_instance_migration","kind":"Bool(O)","info":"Allows migration of the underlying instance where the client resides."},{"word":"backend","kind":"String(O)","info":"AWS auth backend to read tags from."},{"word":"disallow_reauthentication","kind":"Bool(O)","info":"Only allow a single token to be granted per instance ID."},{"word":"instance_id","kind":"String(O)","info":"Instance ID for which this tag is intended. The created tag can only be used by the instance with the given ID."},{"word":"max_ttl","kind":"String(O)","info":"The maximum allowed lifetime of tokens issued using this role."},{"word":"policies","kind":"List(O)","info":"Policies to be associated with the tag."},{"word":"role","kind":"String(R)","info":"Name of the role."}],"attributes":[{"word":"allow_instance_migration","kind":"Bool","info":"Allows migration of the underlying instance where the client resides."},{"word":"backend","kind":"String","info":"AWS auth backend to read tags from."},{"word":"disallow_reauthentication","kind":"Bool","info":"Only allow a single token to be granted per instance ID."},{"word":"instance_id","kind":"String","info":"Instance ID for which this tag is intended. The created tag can only be used by the instance with the given ID."},{"word":"max_ttl","kind":"String","info":"The maximum allowed lifetime of tokens issued using this role."},{"word":"policies","kind":"List","info":"Policies to be associated with the tag."},{"word":"role","kind":"String","info":"Name of the role."},{"word":"tag_key","kind":"String"},{"word":"tag_value","kind":"String"},{"word":"id","kind":"String"}]},"aws_auth_backend_sts_role":{"arguments":[{"word":"account_id","kind":"String(R)","info":"AWS account ID to be associated with STS role."},{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"sts_role","kind":"String(R)","info":"AWS ARN for STS role to be assumed when interacting with the account specified."}],"attributes":[{"word":"account_id","kind":"String","info":"AWS account ID to be associated with STS role."},{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"sts_role","kind":"String","info":"AWS ARN for STS role to be assumed when interacting with the account specified."},{"word":"id","kind":"String"}]},"aws_secret_backend":{"arguments":[{"word":"access_key","kind":"String(R)","info":"The AWS Access Key ID to use when generating new credentials."},{"word":"default_lease_ttl_seconds","kind":"Int(O)","info":"Default lease duration for secrets in seconds"},{"word":"description","kind":"String(O)","info":"Human-friendly description of the mount for the backend."},{"word":"max_lease_ttl_seconds","kind":"Int(O)","info":"Maximum possible lease duration for secrets in seconds"},{"word":"path","kind":"String(O)","info":"Path to mount the backend at."},{"word":"region","kind":"String(O)","info":"The AWS region to make API calls against. Defaults to us-east-1."},{"word":"secret_key","kind":"String(R)","info":"The AWS Secret Access Key to use when generating new credentials."}],"attributes":[{"word":"access_key","kind":"String","info":"The AWS Access Key ID to use when generating new credentials."},{"word":"default_lease_ttl_seconds","kind":"Int","info":"Default lease duration for secrets in seconds"},{"word":"description","kind":"String","info":"Human-friendly description of the mount for the backend."},{"word":"max_lease_ttl_seconds","kind":"Int","info":"Maximum possible lease duration for secrets in seconds"},{"word":"path","kind":"String","info":"Path to mount the backend at."},{"word":"region","kind":"String","info":"The AWS region to make API calls against. Defaults to us-east-1."},{"word":"secret_key","kind":"String","info":"The AWS Secret Access Key to use when generating new credentials."},{"word":"id","kind":"String"}]},"aws_secret_backend_role":{"arguments":[{"word":"backend","kind":"String(R)","info":"The path of the AWS Secret Backend the role belongs to."},{"word":"name","kind":"String(R)","info":"Unique name for the role."},{"word":"policy","kind":"String(O)","info":"IAM policy the role should use in JSON format."},{"word":"policy_arn","kind":"String(O)","info":"ARN for an existing IAM policy the role should use."}],"attributes":[{"word":"backend","kind":"String","info":"The path of the AWS Secret Backend the role belongs to."},{"word":"name","kind":"String","info":"Unique name for the role."},{"word":"policy","kind":"String","info":"IAM policy the role should use in JSON format."},{"word":"policy_arn","kind":"String","info":"ARN for an existing IAM policy the role should use."},{"word":"id","kind":"String"}]},"database_secret_backend_connection":{"arguments":[{"word":"allowed_roles","kind":"List(O)","info":"A list of roles that are allowed to use this connection."},{"word":"backend","kind":"String(R)","info":"Unique name of the Vault mount to configure."},{"word":"cassandra","kind":"List(O)(B)","info":"Connection parameters for the cassandra-database-plugin plugin.","subblock":[{"word":"connect_timeout","kind":"Int(O)","info":"The number of seconds to use as a connection timeout."},{"word":"hosts","kind":"List(O)","info":"Cassandra hosts to connect to."},{"word":"insecure_tls","kind":"Bool(O)","info":"Whether to skip verification of the server certificate when using TLS."},{"word":"password","kind":"String(O)","info":"The password to use when authenticating with Cassandra."},{"word":"pem_bundle","kind":"String(O)","info":"Concatenated PEM blocks containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate."},{"word":"pem_json","kind":"String(O)","info":"Specifies JSON containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate."},{"word":"port","kind":"Int(O)","info":"The transport port to use to connect to Cassandra."},{"word":"protocol_version","kind":"Int(O)","info":"The CQL protocol version to use."},{"word":"tls","kind":"Bool(O)","info":"Whether to use TLS when connecting to Cassandra."},{"word":"username","kind":"String(O)","info":"The username to use when authenticating with Cassandra."}]},{"word":"hana","kind":"List(O)(B)","info":"Connection parameters for the hana-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String(O)","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int(O)","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int(O)","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int(O)","info":"Maximum number of open connections to the database."}]},{"word":"mongodb","kind":"List(O)(B)","info":"Connection parameters for the mongodb-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String(O)","info":"Connection string to use to connect to the database."}]},{"word":"mssql","kind":"List(O)(B)","info":"Connection parameters for the mssql-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String(O)","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int(O)","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int(O)","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int(O)","info":"Maximum number of open connections to the database."}]},{"word":"mysql","kind":"List(O)(B)","info":"Connection parameters for the mysql-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String(O)","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int(O)","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int(O)","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int(O)","info":"Maximum number of open connections to the database."}]},{"word":"name","kind":"String(R)","info":"Name of the database connection."},{"word":"oracle","kind":"List(O)(B)","info":"Connection parameters for the oracle-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String(O)","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int(O)","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int(O)","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int(O)","info":"Maximum number of open connections to the database."}]},{"word":"postgresql","kind":"List(O)(B)","info":"Connection parameters for the postgresql-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String(O)","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int(O)","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int(O)","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int(O)","info":"Maximum number of open connections to the database."}]},{"word":"verify_connection","kind":"Bool(O)","info":"Specifies if the connection is verified during initial configuration."}],"attributes":[{"word":"allowed_roles","kind":"List","info":"A list of roles that are allowed to use this connection."},{"word":"backend","kind":"String","info":"Unique name of the Vault mount to configure."},{"word":"cassandra","kind":"List(B)","info":"Connection parameters for the cassandra-database-plugin plugin.","subblock":[{"word":"connect_timeout","kind":"Int","info":"The number of seconds to use as a connection timeout."},{"word":"hosts","kind":"List","info":"Cassandra hosts to connect to."},{"word":"insecure_tls","kind":"Bool","info":"Whether to skip verification of the server certificate when using TLS."},{"word":"password","kind":"String","info":"The password to use when authenticating with Cassandra."},{"word":"pem_bundle","kind":"String","info":"Concatenated PEM blocks containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate."},{"word":"pem_json","kind":"String","info":"Specifies JSON containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate."},{"word":"port","kind":"Int","info":"The transport port to use to connect to Cassandra."},{"word":"protocol_version","kind":"Int","info":"The CQL protocol version to use."},{"word":"tls","kind":"Bool","info":"Whether to use TLS when connecting to Cassandra."},{"word":"username","kind":"String","info":"The username to use when authenticating with Cassandra."},{"word":"id","kind":"String"}]},{"word":"hana","kind":"List(B)","info":"Connection parameters for the hana-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int","info":"Maximum number of open connections to the database."},{"word":"id","kind":"String"}]},{"word":"mongodb","kind":"List(B)","info":"Connection parameters for the mongodb-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String","info":"Connection string to use to connect to the database."},{"word":"id","kind":"String"}]},{"word":"mssql","kind":"List(B)","info":"Connection parameters for the mssql-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int","info":"Maximum number of open connections to the database."},{"word":"id","kind":"String"}]},{"word":"mysql","kind":"List(B)","info":"Connection parameters for the mysql-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int","info":"Maximum number of open connections to the database."},{"word":"id","kind":"String"}]},{"word":"name","kind":"String","info":"Name of the database connection."},{"word":"oracle","kind":"List(B)","info":"Connection parameters for the oracle-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int","info":"Maximum number of open connections to the database."},{"word":"id","kind":"String"}]},{"word":"postgresql","kind":"List(B)","info":"Connection parameters for the postgresql-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int","info":"Maximum number of open connections to the database."},{"word":"id","kind":"String"}]},{"word":"verify_connection","kind":"Bool","info":"Specifies if the connection is verified during initial configuration."},{"word":"id","kind":"String"}]},"database_secret_backend_role":{"arguments":[{"word":"backend","kind":"String(R)","info":"The path of the Database Secret Backend the role belongs to."},{"word":"creation_statements","kind":"String(R)","info":"Database statements to execute to create and configure a user."},{"word":"db_name","kind":"String(R)","info":"Database connection to use for this role."},{"word":"default_ttl","kind":"Int(O)","info":"Default TTL for leases associated with this role, in seconds."},{"word":"max_ttl","kind":"Int(O)","info":"Maximum TTL for leases associated with this role, in seconds."},{"word":"name","kind":"String(R)","info":"Unique name for the role."},{"word":"renew_statements","kind":"String(O)","info":"Database statements to execute to renew a user."},{"word":"revocation_statements","kind":"String(O)","info":"Database statements to execute to revoke a user."},{"word":"rollback_statements","kind":"String(O)","info":"Database statements to execute to rollback a create operation in the event of an error."}],"attributes":[{"word":"backend","kind":"String","info":"The path of the Database Secret Backend the role belongs to."},{"word":"creation_statements","kind":"String","info":"Database statements to execute to create and configure a user."},{"word":"db_name","kind":"String","info":"Database connection to use for this role."},{"word":"default_ttl","kind":"Int","info":"Default TTL for leases associated with this role, in seconds."},{"word":"max_ttl","kind":"Int","info":"Maximum TTL for leases associated with this role, in seconds."},{"word":"name","kind":"String","info":"Unique name for the role."},{"word":"renew_statements","kind":"String","info":"Database statements to execute to renew a user."},{"word":"revocation_statements","kind":"String","info":"Database statements to execute to revoke a user."},{"word":"rollback_statements","kind":"String","info":"Database statements to execute to rollback a create operation in the event of an error."},{"word":"id","kind":"String"}]},"generic_secret":{"arguments":[{"word":"allow_read","kind":"Bool(O)","info":"Attempt to read the token from Vault if true; if false, drift won't be detected."},{"word":"data_json","kind":"String(R)","info":"JSON-encoded secret data to write."},{"word":"disable_read","kind":"Bool(O)","info":"Don't attempt to read the token from Vault if true; drift won't be detected."},{"word":"path","kind":"String(R)","info":"Full path where the generic secret will be written."}],"attributes":[{"word":"allow_read","kind":"Bool","info":"Attempt to read the token from Vault if true; if false, drift won't be detected."},{"word":"data_json","kind":"String","info":"JSON-encoded secret data to write."},{"word":"disable_read","kind":"Bool","info":"Don't attempt to read the token from Vault if true; drift won't be detected."},{"word":"path","kind":"String","info":"Full path where the generic secret will be written."},{"word":"id","kind":"String"}]},"mount":{"arguments":[{"word":"default_lease_ttl_seconds","kind":"Int(O)","info":"Default lease duration for tokens and secrets in seconds"},{"word":"description","kind":"String(O)","info":"Human-friendly description of the mount"},{"word":"max_lease_ttl_seconds","kind":"Int(O)","info":"Maximum possible lease duration for tokens and secrets in seconds"},{"word":"path","kind":"String(R)","info":"Where the secret backend will be mounted"},{"word":"type","kind":"String(R)","info":"Type of the backend, such as 'aws'"}],"attributes":[{"word":"default_lease_ttl_seconds","kind":"Int","info":"Default lease duration for tokens and secrets in seconds"},{"word":"description","kind":"String","info":"Human-friendly description of the mount"},{"word":"max_lease_ttl_seconds","kind":"Int","info":"Maximum possible lease duration for tokens and secrets in seconds"},{"word":"path","kind":"String","info":"Where the secret backend will be mounted"},{"word":"type","kind":"String","info":"Type of the backend, such as 'aws'"},{"word":"id","kind":"String"}]},"okta_auth_backend":{"arguments":[{"word":"base_url","kind":"String(O)","info":"The Okta url. Examples: oktapreview.com, okta.com (default)"},{"word":"description","kind":"String(O)","info":"The description of the auth backend"},{"word":"group","kind":"Set(O)(B)","subblock":[{"word":"group_name","kind":"String(R)","info":"Name of the Okta group"},{"word":"policies","kind":"Set(R)","info":"Policies to associate with this group"}]},{"word":"max_ttl","kind":"String(O)","info":"Maximum duration after which authentication will be expired"},{"word":"organization","kind":"String(R)","info":"The Okta organization. This will be the first part of the url https://XXX.okta.com."},{"word":"path","kind":"String(O)","info":"path to mount the backend"},{"word":"token","kind":"String(O)","info":"The Okta API token. This is required to query Okta for user group membership. If this is not supplied only locally configured groups will be enabled."},{"word":"ttl","kind":"String(O)","info":"Duration after which authentication will be expired"},{"word":"user","kind":"Set(O)(B)","subblock":[{"word":"groups","kind":"Set(R)","info":"Groups within the Okta auth backend to associate with this user"},{"word":"policies","kind":"Set(O)","info":"Policies to associate with this user"},{"word":"username","kind":"String(R)","info":"Name of the user within Okta"}]}],"attributes":[{"word":"base_url","kind":"String","info":"The Okta url. Examples: oktapreview.com, okta.com (default)"},{"word":"description","kind":"String","info":"The description of the auth backend"},{"word":"group","kind":"Set(B)","subblock":[{"word":"group_name","kind":"String","info":"Name of the Okta group"},{"word":"policies","kind":"Set","info":"Policies to associate with this group"},{"word":"id","kind":"String"}]},{"word":"max_ttl","kind":"String","info":"Maximum duration after which authentication will be expired"},{"word":"organization","kind":"String","info":"The Okta organization. This will be the first part of the url https://XXX.okta.com."},{"word":"path","kind":"String","info":"path to mount the backend"},{"word":"token","kind":"String","info":"The Okta API token. This is required to query Okta for user group membership. If this is not supplied only locally configured groups will be enabled."},{"word":"ttl","kind":"String","info":"Duration after which authentication will be expired"},{"word":"user","kind":"Set(B)","subblock":[{"word":"groups","kind":"Set","info":"Groups within the Okta auth backend to associate with this user"},{"word":"policies","kind":"Set","info":"Policies to associate with this user"},{"word":"username","kind":"String","info":"Name of the user within Okta"},{"word":"id","kind":"String"}]},{"word":"id","kind":"String"}]},"okta_auth_backend_group":{"arguments":[{"word":"group_name","kind":"String(R)","info":"Name of the Okta group"},{"word":"path","kind":"String(R)","info":"Path to the Okta auth backend"},{"word":"policies","kind":"Set(O)","info":"Policies to associate with this group"}],"attributes":[{"word":"group_name","kind":"String","info":"Name of the Okta group"},{"word":"path","kind":"String","info":"Path to the Okta auth backend"},{"word":"policies","kind":"Set","info":"Policies to associate with this group"},{"word":"id","kind":"String"}]},"okta_auth_backend_user":{"arguments":[{"word":"groups","kind":"Set(O)","info":"Groups within the Okta auth backend to associate with this user"},{"word":"path","kind":"String(R)","info":"Path to the Okta auth backend"},{"word":"policies","kind":"Set(O)","info":"Policies to associate with this user"},{"word":"username","kind":"String(R)","info":"Name of the user within Okta"}],"attributes":[{"word":"groups","kind":"Set","info":"Groups within the Okta auth backend to associate with this user"},{"word":"path","kind":"String","info":"Path to the Okta auth backend"},{"word":"policies","kind":"Set","info":"Policies to associate with this user"},{"word":"username","kind":"String","info":"Name of the user within Okta"},{"word":"id","kind":"String"}]},"policy":{"arguments":[{"word":"name","kind":"String(R)","info":"Name of the policy"},{"word":"policy","kind":"String(R)","info":"The policy document"}],"attributes":[{"word":"name","kind":"String","info":"Name of the policy"},{"word":"policy","kind":"String","info":"The policy document"},{"word":"id","kind":"String"}]}},"datas":{"approle_auth_backend_role_id":{"arguments":[{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"role_name","kind":"String(R)","info":"Name of the role."}],"attributes":[{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"role_id","kind":"String","info":"The RoleID of the role."},{"word":"role_name","kind":"String","info":"Name of the role."},{"word":"id","kind":"String"}]},"aws_access_credentials":{"arguments":[{"word":"backend","kind":"String(R)","info":"AWS Secret Backend to read credentials from."},{"word":"role","kind":"String(R)","info":"AWS Secret Role to read credentials from."},{"word":"type","kind":"String(O)","info":"Type of credentials to read. Must be either 'creds' for Access Key and Secret Key, or 'sts' for STS."}],"attributes":[{"word":"access_key","kind":"String","info":"AWS access key ID read from Vault."},{"word":"backend","kind":"String","info":"AWS Secret Backend to read credentials from."},{"word":"lease_duration","kind":"Int","info":"Lease duration in seconds relative to the time in lease_start_time."},{"word":"lease_id","kind":"String","info":"Lease identifier assigned by vault."},{"word":"lease_renewable","kind":"Bool","info":"True if the duration of this lease can be extended through renewal."},{"word":"lease_start_time","kind":"String","info":"Time at which the lease was read, using the clock of the system where Terraform was running"},{"word":"role","kind":"String","info":"AWS Secret Role to read credentials from."},{"word":"secret_key","kind":"String","info":"AWS secret key read from Vault."},{"word":"security_token","kind":"String","info":"AWS security token read from Vault. (Only returned if type is 'sts'.)"},{"word":"type","kind":"String","info":"Type of credentials to read. Must be either 'creds' for Access Key and Secret Key, or 'sts' for STS."},{"word":"id","kind":"String"}]},"generic_secret":{"arguments":[{"word":"path","kind":"String(R)","info":"Full path from which a secret will be read."}],"attributes":[{"word":"data","kind":"Map","info":"Map of strings read from Vault."},{"word":"data_json","kind":"String","info":"JSON-encoded secret data read from Vault."},{"word":"lease_duration","kind":"Int","info":"Lease duration in seconds relative to the time in lease_start_time."},{"word":"lease_id","kind":"String","info":"Lease identifier assigned by vault."},{"word":"lease_renewable","kind":"Bool","info":"True if the duration of this lease can be extended through renewal."},{"word":"lease_start_time","kind":"String","info":"Time at which the lease was read, using the clock of the system where Terraform was running"},{"word":"path","kind":"String","info":"Full path from which a secret will be read."},{"word":"id","kind":"String"}]}},"unknowns":{}}