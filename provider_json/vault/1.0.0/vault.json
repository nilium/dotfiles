{"provider_arguments":[],"resources":{"auth_backend":{"arguments":[{"word":"description","kind":"String(O)","info":"The description of the auth backend"},{"word":"path","kind":"String(O)","info":"path to mount the backend. This defaults to the type."},{"word":"type","kind":"String(R)","info":"Name of the auth backend"}],"attributes":[{"word":"description","kind":"String","info":"The description of the auth backend"},{"word":"path","kind":"String","info":"path to mount the backend. This defaults to the type."},{"word":"type","kind":"String","info":"Name of the auth backend"},{"word":"id","kind":"String"}]},"aws_auth_backend_cert":{"arguments":[{"word":"aws_public_cert","kind":"String(R)","info":"Base64 encoded AWS Public key required to verify PKCS7 signature of the EC2 instance metadata."},{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"cert_name","kind":"String(R)","info":"Name of the certificate to configure."},{"word":"type","kind":"String(O)","info":"The type of document that can be verified using the certificate. Must be either \"pkcs7\" or \"identity\"."}],"attributes":[{"word":"aws_public_cert","kind":"String","info":"Base64 encoded AWS Public key required to verify PKCS7 signature of the EC2 instance metadata."},{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"cert_name","kind":"String","info":"Name of the certificate to configure."},{"word":"type","kind":"String","info":"The type of document that can be verified using the certificate. Must be either \"pkcs7\" or \"identity\"."},{"word":"id","kind":"String"}]},"aws_auth_backend_client":{"arguments":[{"word":"access_key","kind":"String(O)","info":"AWS Access key with permissions to query AWS APIs."},{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"ec2_endpoint","kind":"String(O)","info":"URL to override the default generated endpoint for making AWS EC2 API calls."},{"word":"iam_endpoint","kind":"String(O)","info":"URL to override the default generated endpoint for making AWS IAM API calls."},{"word":"iam_server_id_header_value","kind":"String(O)","info":"The value to require in the X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests that are used in the iam auth method."},{"word":"secret_key","kind":"String(O)","info":"AWS Secret key with permissions to query AWS APIs."},{"word":"sts_endpoint","kind":"String(O)","info":"URL to override the default generated endpoint for making AWS STS API calls."}],"attributes":[{"word":"access_key","kind":"String","info":"AWS Access key with permissions to query AWS APIs."},{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"ec2_endpoint","kind":"String","info":"URL to override the default generated endpoint for making AWS EC2 API calls."},{"word":"iam_endpoint","kind":"String","info":"URL to override the default generated endpoint for making AWS IAM API calls."},{"word":"iam_server_id_header_value","kind":"String","info":"The value to require in the X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests that are used in the iam auth method."},{"word":"secret_key","kind":"String","info":"AWS Secret key with permissions to query AWS APIs."},{"word":"sts_endpoint","kind":"String","info":"URL to override the default generated endpoint for making AWS STS API calls."},{"word":"id","kind":"String"}]},"aws_auth_backend_login":{"arguments":[{"word":"backend","kind":"String(O)","info":"AWS Auth Backend to read the token from."},{"word":"iam_http_request_method","kind":"String(O)","info":"The HTTP method used in the signed request."},{"word":"iam_request_body","kind":"String(O)","info":"The Base64-encoded body of the signed request."},{"word":"iam_request_headers","kind":"String(O)","info":"The Base64-encoded, JSON serialized representation of the sts:GetCallerIdentity HTTP request headers."},{"word":"iam_request_url","kind":"String(O)","info":"The Base64-encoded HTTP URL used in the signed request."},{"word":"identity","kind":"String(O)","info":"Base64-encoded EC2 instance identity document to authenticate with."},{"word":"nonce","kind":"String(O)","info":"The nonce to be used for subsequent login requests."},{"word":"pkcs7","kind":"String(O)","info":"PKCS7 signature of the identity document to authenticate with, with all newline characters removed."},{"word":"role","kind":"String(O)","info":"AWS Auth Role to read the token from."},{"word":"signature","kind":"String(O)","info":"Base64-encoded SHA256 RSA signature of the instance identtiy document to authenticate with."}],"attributes":[{"word":"accessor","kind":"String","info":"The accessor returned from Vault for this token."},{"word":"auth_type","kind":"String","info":"The auth method used to generate this token."},{"word":"backend","kind":"String","info":"AWS Auth Backend to read the token from."},{"word":"client_token","kind":"String","info":"The token returned by Vault."},{"word":"iam_http_request_method","kind":"String","info":"The HTTP method used in the signed request."},{"word":"iam_request_body","kind":"String","info":"The Base64-encoded body of the signed request."},{"word":"iam_request_headers","kind":"String","info":"The Base64-encoded, JSON serialized representation of the sts:GetCallerIdentity HTTP request headers."},{"word":"iam_request_url","kind":"String","info":"The Base64-encoded HTTP URL used in the signed request."},{"word":"identity","kind":"String","info":"Base64-encoded EC2 instance identity document to authenticate with."},{"word":"lease_duration","kind":"Int","info":"Lease duration in seconds relative to the time in lease_start_time."},{"word":"lease_start_time","kind":"String","info":"Time at which the lease was read, using the clock of the system where Terraform was running"},{"word":"metadata","kind":"Map","info":"The metadata reported by the Vault server."},{"word":"nonce","kind":"String","info":"The nonce to be used for subsequent login requests."},{"word":"pkcs7","kind":"String","info":"PKCS7 signature of the identity document to authenticate with, with all newline characters removed."},{"word":"policies","kind":"List","info":"The policies assigned to this token."},{"word":"renewable","kind":"Bool","info":"True if the duration of this lease can be extended through renewal."},{"word":"role","kind":"String","info":"AWS Auth Role to read the token from."},{"word":"signature","kind":"String","info":"Base64-encoded SHA256 RSA signature of the instance identtiy document to authenticate with."},{"word":"id","kind":"String"}]},"aws_auth_backend_role":{"arguments":[{"word":"allow_instance_migration","kind":"Bool(O)","info":"When true, allows migration of the underlying instance where the client resides. Use with caution."},{"word":"auth_type","kind":"String(O)","info":"The auth type permitted for this role."},{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"bound_account_id","kind":"String(O)","info":"Only EC2 instances with this account ID in their identity document will be permitted to log in."},{"word":"bound_ami_id","kind":"String(O)","info":"Only EC2 instances using this AMI ID will be permitted to log in."},{"word":"bound_iam_instance_profile_arn","kind":"String(O)","info":"Only EC2 instances associated with an IAM instance profile ARN that matches this value will be permitted to log in."},{"word":"bound_iam_principal_arn","kind":"String(O)","info":"The IAM principal that must be authenticated using the iam auth method."},{"word":"bound_iam_role_arn","kind":"String(O)","info":"Only EC2 instances that match this IAM role ARN will be permitted to log in."},{"word":"bound_region","kind":"String(O)","info":"Only EC2 instances in this region will be permitted to log in."},{"word":"bound_subnet_id","kind":"String(O)","info":"Only EC2 instances associated with this subnet ID will be permitted to log in."},{"word":"bound_vpc_id","kind":"String(O)","info":"Only EC2 instances associated with this VPC ID will be permitted to log in."},{"word":"disallow_reauthentication","kind":"Bool(O)","info":"When true, only allows a single token to be granted per instance ID."},{"word":"inferred_aws_region","kind":"String(O)","info":"The region to search for the inferred entities in."},{"word":"inferred_entity_type","kind":"String(O)","info":"The type of inferencing Vault should do."},{"word":"max_ttl","kind":"Int(O)","info":"The maximum allowed lifetime of tokens issued using this role."},{"word":"period","kind":"Int(O)","info":"The duration in which a token should be renewed. At each renewal, the token's TTL will be set to the value of this parameter."},{"word":"policies","kind":"List(O)","info":"Policies to be set on tokens issued using this role."},{"word":"resolve_aws_unique_ids","kind":"Bool(O)","info":"Whether or not Vault should resolve the bound_iam_principal_arn to an AWS Unique ID. When true, deleting a principal and recreating it with the same name won't automatically grant the new principal the same roles in Vault that the old principal had."},{"word":"role","kind":"String(R)","info":"Name of the role."},{"word":"role_tag","kind":"String(O)","info":"The key of the tag on EC2 instance to use for role tags."},{"word":"ttl","kind":"Int(O)","info":"The TTL period of tokens issued using this role, provided as the number of minutes."}],"attributes":[{"word":"allow_instance_migration","kind":"Bool","info":"When true, allows migration of the underlying instance where the client resides. Use with caution."},{"word":"auth_type","kind":"String","info":"The auth type permitted for this role."},{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"bound_account_id","kind":"String","info":"Only EC2 instances with this account ID in their identity document will be permitted to log in."},{"word":"bound_ami_id","kind":"String","info":"Only EC2 instances using this AMI ID will be permitted to log in."},{"word":"bound_iam_instance_profile_arn","kind":"String","info":"Only EC2 instances associated with an IAM instance profile ARN that matches this value will be permitted to log in."},{"word":"bound_iam_principal_arn","kind":"String","info":"The IAM principal that must be authenticated using the iam auth method."},{"word":"bound_iam_role_arn","kind":"String","info":"Only EC2 instances that match this IAM role ARN will be permitted to log in."},{"word":"bound_region","kind":"String","info":"Only EC2 instances in this region will be permitted to log in."},{"word":"bound_subnet_id","kind":"String","info":"Only EC2 instances associated with this subnet ID will be permitted to log in."},{"word":"bound_vpc_id","kind":"String","info":"Only EC2 instances associated with this VPC ID will be permitted to log in."},{"word":"disallow_reauthentication","kind":"Bool","info":"When true, only allows a single token to be granted per instance ID."},{"word":"inferred_aws_region","kind":"String","info":"The region to search for the inferred entities in."},{"word":"inferred_entity_type","kind":"String","info":"The type of inferencing Vault should do."},{"word":"max_ttl","kind":"Int","info":"The maximum allowed lifetime of tokens issued using this role."},{"word":"period","kind":"Int","info":"The duration in which a token should be renewed. At each renewal, the token's TTL will be set to the value of this parameter."},{"word":"policies","kind":"List","info":"Policies to be set on tokens issued using this role."},{"word":"resolve_aws_unique_ids","kind":"Bool","info":"Whether or not Vault should resolve the bound_iam_principal_arn to an AWS Unique ID. When true, deleting a principal and recreating it with the same name won't automatically grant the new principal the same roles in Vault that the old principal had."},{"word":"role","kind":"String","info":"Name of the role."},{"word":"role_tag","kind":"String","info":"The key of the tag on EC2 instance to use for role tags."},{"word":"ttl","kind":"Int","info":"The TTL period of tokens issued using this role, provided as the number of minutes."},{"word":"id","kind":"String"}]},"aws_auth_backend_sts_role":{"arguments":[{"word":"account_id","kind":"String(R)","info":"AWS account ID to be associated with STS role."},{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"sts_role","kind":"String(R)","info":"AWS ARN for STS role to be assumed when interacting with the account specified."}],"attributes":[{"word":"account_id","kind":"String","info":"AWS account ID to be associated with STS role."},{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"sts_role","kind":"String","info":"AWS ARN for STS role to be assumed when interacting with the account specified."},{"word":"id","kind":"String"}]},"aws_secret_backend":{"arguments":[{"word":"access_key","kind":"String(R)","info":"The AWS Access Key ID to use when generating new credentials."},{"word":"default_lease_ttl_seconds","kind":"Int(O)","info":"Default lease duration for secrets in seconds"},{"word":"description","kind":"String(O)","info":"Human-friendly description of the mount for the backend."},{"word":"max_lease_ttl_seconds","kind":"Int(O)","info":"Maximum possible lease duration for secrets in seconds"},{"word":"path","kind":"String(O)","info":"Path to mount the backend at."},{"word":"region","kind":"String(O)","info":"The AWS region to make API calls against. Defaults to us-east-1."},{"word":"secret_key","kind":"String(R)","info":"The AWS Secret Access Key to use when generating new credentials."}],"attributes":[{"word":"access_key","kind":"String","info":"The AWS Access Key ID to use when generating new credentials."},{"word":"default_lease_ttl_seconds","kind":"Int","info":"Default lease duration for secrets in seconds"},{"word":"description","kind":"String","info":"Human-friendly description of the mount for the backend."},{"word":"max_lease_ttl_seconds","kind":"Int","info":"Maximum possible lease duration for secrets in seconds"},{"word":"path","kind":"String","info":"Path to mount the backend at."},{"word":"region","kind":"String","info":"The AWS region to make API calls against. Defaults to us-east-1."},{"word":"secret_key","kind":"String","info":"The AWS Secret Access Key to use when generating new credentials."},{"word":"id","kind":"String"}]},"aws_secret_backend_role":{"arguments":[{"word":"backend","kind":"String(R)","info":"The path of the AWS Secret Backend the role belongs to."},{"word":"name","kind":"String(R)","info":"Unique name for the role."},{"word":"policy","kind":"String(O)","info":"IAM policy the role should use in JSON format."},{"word":"policy_arn","kind":"String(O)","info":"ARN for an existing IAM policy the role should use."}],"attributes":[{"word":"backend","kind":"String","info":"The path of the AWS Secret Backend the role belongs to."},{"word":"name","kind":"String","info":"Unique name for the role."},{"word":"policy","kind":"String","info":"IAM policy the role should use in JSON format."},{"word":"policy_arn","kind":"String","info":"ARN for an existing IAM policy the role should use."},{"word":"id","kind":"String"}]},"generic_secret":{"arguments":[{"word":"allow_read","kind":"Bool(O)","info":"Attempt to read the token from Vault if true; if false, drift won't be detected."},{"word":"data_json","kind":"String(R)","info":"JSON-encoded secret data to write."},{"word":"disable_read","kind":"Bool(O)","info":"Don't attempt to read the token from Vault if true; drift won't be detected."},{"word":"path","kind":"String(R)","info":"Full path where the generic secret will be written."}],"attributes":[{"word":"allow_read","kind":"Bool","info":"Attempt to read the token from Vault if true; if false, drift won't be detected."},{"word":"data_json","kind":"String","info":"JSON-encoded secret data to write."},{"word":"disable_read","kind":"Bool","info":"Don't attempt to read the token from Vault if true; drift won't be detected."},{"word":"path","kind":"String","info":"Full path where the generic secret will be written."},{"word":"id","kind":"String"}]},"mount":{"arguments":[{"word":"default_lease_ttl_seconds","kind":"Int(O)","info":"Default lease duration for tokens and secrets in seconds"},{"word":"description","kind":"String(O)","info":"Human-friendly description of the mount"},{"word":"max_lease_ttl_seconds","kind":"Int(O)","info":"Maximum possible lease duration for tokens and secrets in seconds"},{"word":"path","kind":"String(R)","info":"Where the secret backend will be mounted"},{"word":"type","kind":"String(R)","info":"Type of the backend, such as 'aws'"}],"attributes":[{"word":"default_lease_ttl_seconds","kind":"Int","info":"Default lease duration for tokens and secrets in seconds"},{"word":"description","kind":"String","info":"Human-friendly description of the mount"},{"word":"max_lease_ttl_seconds","kind":"Int","info":"Maximum possible lease duration for tokens and secrets in seconds"},{"word":"path","kind":"String","info":"Where the secret backend will be mounted"},{"word":"type","kind":"String","info":"Type of the backend, such as 'aws'"},{"word":"id","kind":"String"}]},"policy":{"arguments":[{"word":"name","kind":"String(R)","info":"Name of the policy"},{"word":"policy","kind":"String(R)","info":"The policy document"}],"attributes":[{"word":"name","kind":"String","info":"Name of the policy"},{"word":"policy","kind":"String","info":"The policy document"},{"word":"id","kind":"String"}]}},"datas":{"aws_access_credentials":{"arguments":[{"word":"backend","kind":"String(R)","info":"AWS Secret Backend to read credentials from."},{"word":"role","kind":"String(R)","info":"AWS Secret Role to read credentials from."},{"word":"type","kind":"String(O)","info":"Type of credentials to read. Must be either 'creds' for Access Key and Secret Key, or 'sts' for STS."}],"attributes":[{"word":"access_key","kind":"String","info":"AWS access key ID read from Vault."},{"word":"backend","kind":"String","info":"AWS Secret Backend to read credentials from."},{"word":"lease_duration","kind":"Int","info":"Lease duration in seconds relative to the time in lease_start_time."},{"word":"lease_id","kind":"String","info":"Lease identifier assigned by vault."},{"word":"lease_renewable","kind":"Bool","info":"True if the duration of this lease can be extended through renewal."},{"word":"lease_start_time","kind":"String","info":"Time at which the lease was read, using the clock of the system where Terraform was running"},{"word":"role","kind":"String","info":"AWS Secret Role to read credentials from."},{"word":"secret_key","kind":"String","info":"AWS secret key read from Vault."},{"word":"security_token","kind":"String","info":"AWS security token read from Vault. (Only returned if type is 'sts'.)"},{"word":"type","kind":"String","info":"Type of credentials to read. Must be either 'creds' for Access Key and Secret Key, or 'sts' for STS."},{"word":"id","kind":"String"}]},"generic_secret":{"arguments":[{"word":"path","kind":"String(R)","info":"Full path from which a secret will be read."}],"attributes":[{"word":"data","kind":"Map","info":"Map of strings read from Vault."},{"word":"data_json","kind":"String","info":"JSON-encoded secret data read from Vault."},{"word":"lease_duration","kind":"Int","info":"Lease duration in seconds relative to the time in lease_start_time."},{"word":"lease_id","kind":"String","info":"Lease identifier assigned by vault."},{"word":"lease_renewable","kind":"Bool","info":"True if the duration of this lease can be extended through renewal."},{"word":"lease_start_time","kind":"String","info":"Time at which the lease was read, using the clock of the system where Terraform was running"},{"word":"path","kind":"String","info":"Full path from which a secret will be read."},{"word":"id","kind":"String"}]}},"unknowns":{}}