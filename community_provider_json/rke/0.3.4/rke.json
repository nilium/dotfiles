{"provider_arguments":[],"resources":{"cluster":{"arguments":[{"word":"addon_job_timeout","kind":"Int(O)","info":"Timeout in seconds for status check on addon deployment jobs"},{"word":"addons","kind":"String(O)","info":"YAML manifest for user provided addons to be deployed on the cluster"},{"word":"addons_include","kind":"List(O)","info":"List of urls or paths for addons"},{"word":"authentication","kind":"List(O)(B)","info":"Authentication configuration used in the cluster","subblock":[{"word":"options","kind":"Map(O)","info":"Authentication options"},{"word":"sans","kind":"List(O)","info":"List of additional hostnames and IPs to include in the api server PKI cert"},{"word":"strategy","kind":"String(O)","info":"Authentication strategy that will be used in kubernetes cluster"}]},{"word":"authorization","kind":"List(O)(B)","info":"Authorization mode configuration used in the cluster","subblock":[{"word":"mode","kind":"String(O)","info":"Authorization mode used by kubernetes"},{"word":"options","kind":"Map(O)","info":"Authorization mode options"}]},{"word":"bastion_host","kind":"List(O)(B)","info":"Bastion/Jump Host configuration","subblock":[{"word":"address","kind":"String(R)","info":"Address of Bastion Host"},{"word":"port","kind":"Int(O)","info":"SSH Port of Bastion Host"},{"word":"ssh_agent_auth","kind":"Bool(O)","info":"SSH Agent Auth enable"},{"word":"ssh_key","kind":"String(O)","info":"SSH Private Key"},{"word":"ssh_key_path","kind":"String(O)","info":"SSH Private Key"},{"word":"user","kind":"String(O)","info":"SSH User to Bastion Host"}]},{"word":"cloud_provider","kind":"List(O)(B)","info":"Cloud Provider options","subblock":[{"word":"aws_cloud_config","kind":"List(O)(B)","info":"AWS cloud config file","subblock":[]},{"word":"azure_cloud_config","kind":"List(O)(B)","info":"Azure cloud config file","subblock":[{"word":"aad_client_cert_password","kind":"String(O)","info":"The password of the client certificate for an AAD application with RBAC access to talk to Azure RM APIs"},{"word":"aad_client_cert_path","kind":"String(O)","info":"The path of a client certificate for an AAD application with RBAC access to talk to Azure RM APIs"},{"word":"aad_client_id","kind":"String(O)","info":"The ClientID for an AAD application with RBAC access to talk to Azure RM APIs"},{"word":"aad_client_secret","kind":"String(O)","info":"The ClientSecret for an AAD application with RBAC access to talk to Azure RM APIs"},{"word":"cloud","kind":"String(O)","info":"The cloud environment identifier. Takes values from https://github.com/Azure/go-autorest/blob/ec5f4903f77ed9927ac95b19ab8e44ada64c1356/autorest/azure/environments.go#L13"},{"word":"cloud_provider_backoff","kind":"Bool(O)","info":"Enable exponential backoff to manage resource request retries"},{"word":"cloud_provider_backoff_duration","kind":"Int(O)","info":"Backoff duration"},{"word":"cloud_provider_backoff_exponent","kind":"Int(O)","info":"Backoff exponent"},{"word":"cloud_provider_backoff_jitter","kind":"Int(O)","info":"Backoff jitter"},{"word":"cloud_provider_backoff_retries","kind":"Int(O)","info":"Backoff retry limit"},{"word":"cloud_provider_rate_limit","kind":"Bool(O)","info":"Enable rate limiting"},{"word":"cloud_provider_rate_limit_bucket","kind":"Int(O)","info":"Rate limit Bucket Size"},{"word":"cloud_provider_rate_limit_qps","kind":"Int(O)","info":"Rate limit QPS"},{"word":"location","kind":"String(O)","info":"The location of the resource group that the cluster is deployed in"},{"word":"maximum_load_balancer_rule_count","kind":"Int(O)","info":"Maximum allowed LoadBalancer Rule Count is the limit enforced by Azure Load balancer"},{"word":"primary_availability_set_name","kind":"String(O)","info":"The name of the availability set that should be used as the load balancer backendIf this is set, the Azure cloudprovider will only add nodes from that availability set to the loadbalancer backend pool. If this is not set, and multiple agent pools (availability sets) are used, thenthe cloudprovider will try to add all nodes to a single backend pool which is forbidden.In other words, if you use multiple agent pools (availability sets), you MUST set this field."},{"word":"primary_scale_set_name","kind":"String(O)","info":"The name of the scale set that should be used as the load balancer backend.If this is set, the Azure cloudprovider will only add nodes from that scale set to the loadbalancer backend pool. If this is not set, and multiple agent pools (scale sets) are used, thenthe cloudprovider will try to add all nodes to a single backend pool which is forbidden.In other words, if you use multiple agent pools (scale sets), you MUST set this field."},{"word":"resource_group","kind":"String(O)","info":"The name of the resource group that the cluster is deployed in"},{"word":"route_table_name","kind":"String(O)","info":"(Optional in 1.6) The name of the route table attached to the subnet that the cluster is deployed in"},{"word":"subscription_id","kind":"String(O)","info":"The ID of the Azure Subscription that the cluster is deployed in"},{"word":"tenant_id","kind":"String(O)","info":"The AAD Tenant ID for the Subscription that the cluster is deployed in"},{"word":"use_instance_metadata","kind":"Bool(O)","info":"Use instance metadata service where possible"},{"word":"use_managed_identity_extension","kind":"Bool(O)","info":"Use managed service identity for the virtual machine to access Azure ARM APIs"},{"word":"vm_type","kind":"String(O)","info":"The type of azure nodes. Candidate valudes are: vmss and standard. If not set, it will be default to standard."},{"word":"vnet_name","kind":"String(O)","info":"The name of the VNet that the cluster is deployed in"},{"word":"vnet_resource_group","kind":"String(O)","info":"The name of the resource group that the Vnet is deployed in"}]},{"word":"custom_cloud_config","kind":"String(O)","info":"CustomCloudProvider is a multiline string that represent a custom cloud config file"},{"word":"name","kind":"String(O)","info":"Name of the Cloud Provider"},{"word":"openstack_cloud_config","kind":"List(O)(B)","info":"OpenStack cloud config file","subblock":[{"word":"block_storage","kind":"List(O)(B)","subblock":[{"word":"bs_version","kind":"String(O)"},{"word":"ignore_volume_az","kind":"Bool(O)"},{"word":"trust_device_path","kind":"Bool(O)"}]},{"word":"global","kind":"List(O)(B)","subblock":[{"word":"auth_url","kind":"String(O)"},{"word":"ca_file","kind":"String(O)"},{"word":"domain_id","kind":"String(O)"},{"word":"domain_name","kind":"String(O)"},{"word":"password","kind":"String(O)"},{"word":"region","kind":"String(O)"},{"word":"tenant_id","kind":"String(O)"},{"word":"tenant_name","kind":"String(O)"},{"word":"trust_id","kind":"String(O)"},{"word":"user_id","kind":"String(O)"},{"word":"username","kind":"String(O)"}]},{"word":"load_balancer","kind":"List(O)(B)","subblock":[{"word":"create_monitor","kind":"Bool(O)"},{"word":"floating_network_id","kind":"String(O)"},{"word":"lb_method","kind":"String(O)"},{"word":"lb_provider","kind":"String(O)"},{"word":"lb_version","kind":"String(O)"},{"word":"manage_security_groups","kind":"Bool(O)"},{"word":"monitor_delay","kind":"Int(O)"},{"word":"monitor_max_retries","kind":"Int(O)"},{"word":"monitor_timeout","kind":"Int(O)"},{"word":"subnet_id","kind":"String(O)"},{"word":"use_octavia","kind":"Bool(O)"}]},{"word":"metadata","kind":"List(O)(B)","subblock":[{"word":"request_timeout","kind":"Int(O)"},{"word":"search_order","kind":"String(O)"}]},{"word":"route","kind":"List(O)(B)","subblock":[{"word":"router_id","kind":"String(O)"}]}]},{"word":"vsphere_cloud_config","kind":"List(O)(B)","info":"Vsphere cloud config file","subblock":[{"word":"disk","kind":"List(O)(B)","subblock":[{"word":"scsi_controller_type","kind":"String(O)"}]},{"word":"global","kind":"List(O)(B)","subblock":[{"word":"datacenter","kind":"String(O)"},{"word":"datacenters","kind":"String(O)"},{"word":"datastore","kind":"String(O)"},{"word":"insecure_flag","kind":"Bool(O)"},{"word":"password","kind":"String(O)"},{"word":"port","kind":"String(O)"},{"word":"server","kind":"String(O)"},{"word":"soap_roundtrip_count","kind":"Int(O)"},{"word":"user","kind":"String(O)"},{"word":"vm_name","kind":"String(O)"},{"word":"vm_uuid","kind":"String(O)"},{"word":"working_dir","kind":"String(O)"}]},{"word":"network","kind":"List(O)(B)","subblock":[{"word":"public_network","kind":"String(O)"}]},{"word":"virtual_center","kind":"List(O)(B)","subblock":[{"word":"datacenters","kind":"String(O)"},{"word":"password","kind":"String(O)"},{"word":"port","kind":"String(O)"},{"word":"server","kind":"String(R)"},{"word":"soap_roundtrip_count","kind":"Int(O)"},{"word":"user","kind":"String(O)"}]},{"word":"workspace","kind":"List(O)(B)","subblock":[{"word":"datacenter","kind":"String(O)"},{"word":"default_datastore","kind":"String(O)"},{"word":"folder","kind":"String(O)"},{"word":"resourcepool_path","kind":"String(O)"},{"word":"server","kind":"String(O)"}]}]}]},{"word":"cluster_name","kind":"String(O)","info":"Cluster Name used in the kube config"},{"word":"disable_port_check","kind":"Bool(O)"},{"word":"ignore_docker_version","kind":"Bool(O)","info":"Enable/Disable strict docker version checking"},{"word":"ingress","kind":"List(O)(B)","info":"Ingress controller used in the cluster","subblock":[{"word":"extra_args","kind":"Map(O)","info":"Ingress controller extra arguments"},{"word":"node_selector","kind":"Map(O)","info":"Ingress controller used in the cluster"},{"word":"options","kind":"Map(O)","info":"Ingress controller options"},{"word":"provider","kind":"String(O)","info":"Ingress controller type used by kubernetes"}]},{"word":"kubernetes_version","kind":"String(O)","info":"Kubernetes version to use (if kubernetes image is specified, image version takes precedence)"},{"word":"network","kind":"List(O)(B)","info":"Network configuration used in the kubernetes cluster","subblock":[{"word":"options","kind":"Map(O)","info":"Plugin options to configure network properties"},{"word":"plugin","kind":"String(O)","info":"Network Plugin That will be used in kubernetes cluster"}]},{"word":"nodes","kind":"List(O)(B)","info":"Kubernetes nodes","subblock":[{"word":"address","kind":"String(R)","info":"IP or FQDN that is fully resolvable and used for SSH communication"},{"word":"docker_socket","kind":"String(O)","info":"Docker socket on the node that will be used in tunneling"},{"word":"hostname_override","kind":"String(O)","info":"HostnameOverride"},{"word":"internal_address","kind":"String(O)","info":"Internal address that will be used for components communication"},{"word":"labels","kind":"Map(O)","info":"Node Labels"},{"word":"node_name","kind":"String(O)","info":"Name of the host provisioned via docker machine"},{"word":"port","kind":"Int(O)","info":"Port used for SSH communication"},{"word":"role","kind":"List(O)","info":"Node role in kubernetes cluster [controlplane/worker/etcd])"},{"word":"roles","kind":"String(O)","info":"Node role in kubernetes cluster [controlplane/worker/etcd], specified by a comma-separated string"},{"word":"ssh_agent_auth","kind":"Bool(O)","info":"SSH Agent Auth enable"},{"word":"ssh_key","kind":"String(O)","info":"SSH Private Key"},{"word":"ssh_key_path","kind":"String(O)","info":"SSH Private Key"},{"word":"user","kind":"String(O)","info":"SSH user that will be used by RKE"}]},{"word":"nodes_conf","kind":"List(O)","info":"Kubernetes nodes(YAML or JSON)"},{"word":"prefix_path","kind":"String(O)","info":"Kubernetes directory path"},{"word":"private_registries","kind":"List(O)(B)","info":"List of private registries and their credentials","subblock":[{"word":"password","kind":"String(O)","info":"Password for registry access"},{"word":"url","kind":"String(O)","info":"URL for the registry"},{"word":"user","kind":"String(O)","info":"User name for registry access"}]},{"word":"services_etcd","kind":"List(O)(B)","subblock":[{"word":"ca_cert","kind":"String(O)","info":"External CA certificate"},{"word":"cert","kind":"String(O)","info":"External Client certificate"},{"word":"creation","kind":"String(O)","info":"Etcd snapshot Creation period"},{"word":"external_urls","kind":"List(O)","info":"List of etcd urls"},{"word":"extra_args","kind":"Map(O)","info":"Extra arguments that are added to the etcd services"},{"word":"extra_binds","kind":"List(O)","info":"Extra binds added to the nodes"},{"word":"extra_env","kind":"List(O)","info":"Extra env is to provide extra env variable to the docker container running kubernetes service"},{"word":"image","kind":"String(O)","info":"Docker image of the etcd service"},{"word":"key","kind":"String(O)","info":"External Client key"},{"word":"path","kind":"String(O)","info":"External etcd prefix"},{"word":"retention","kind":"String(O)","info":"Etcd snapshot Retention period"},{"word":"snapshot","kind":"Bool(O)","info":"Etcd Recurring snapshot Service"}]},{"word":"services_kube_api","kind":"List(O)(B)","subblock":[{"word":"extra_args","kind":"Map(O)","info":"Extra arguments that are added to the kube-api services"},{"word":"extra_binds","kind":"List(O)","info":"Extra binds added to the nodes"},{"word":"extra_env","kind":"List(O)","info":"Extra env is to provide extra env variable to the docker container running kubernetes service"},{"word":"image","kind":"String(O)","info":"Docker image of the kube-api service"},{"word":"pod_security_policy","kind":"Bool(O)","info":"Enabled/Disable PodSecurityPolicy"},{"word":"service_cluster_ip_range","kind":"String(O)","info":"Virtual IP range that will be used by Kubernetes services"},{"word":"service_node_port_range","kind":"String(O)","info":"Port range for services defined with NodePort type"}]},{"word":"services_kube_controller","kind":"List(O)(B)","subblock":[{"word":"cluster_cidr","kind":"String(O)","info":"CIDR Range for Pods in cluster"},{"word":"extra_args","kind":"Map(O)","info":"Extra arguments that are added to the kube-controller services"},{"word":"extra_binds","kind":"List(O)","info":"Extra binds added to the nodes"},{"word":"extra_env","kind":"List(O)","info":"Extra env is to provide extra env variable to the docker container running kubernetes service"},{"word":"image","kind":"String(O)","info":"Docker image of the kube-controller service"},{"word":"service_cluster_ip_range","kind":"String(O)","info":"Virtual IP range that will be used by Kubernetes services"}]},{"word":"services_kubelet","kind":"List(O)(B)","subblock":[{"word":"cluster_dns_server","kind":"String(O)","info":"Cluster DNS service ip"},{"word":"cluster_domain","kind":"String(O)","info":"Domain of the cluster (default: \"cluster.local\")"},{"word":"extra_args","kind":"Map(O)","info":"Extra arguments that are added to the kubelet services"},{"word":"extra_binds","kind":"List(O)","info":"Extra binds added to the nodes"},{"word":"extra_env","kind":"List(O)","info":"Extra env is to provide extra env variable to the docker container running kubernetes service"},{"word":"fail_swap_on","kind":"Bool(O)","info":"Fail if swap is enabled"},{"word":"image","kind":"String(O)","info":"Docker image of the kubelet service"},{"word":"infra_container_image","kind":"String(O)","info":"The image whose network/ipc namespaces containers in each pod will use"}]},{"word":"services_kubeproxy","kind":"List(O)(B)","subblock":[{"word":"extra_args","kind":"Map(O)","info":"Extra arguments that are added to the kubeproxy services"},{"word":"extra_binds","kind":"List(O)","info":"Extra binds added to the nodes"},{"word":"extra_env","kind":"List(O)","info":"Extra env is to provide extra env variable to the docker container running kubernetes service"},{"word":"image","kind":"String(O)","info":"Docker image of the kubeproxy service"}]},{"word":"services_scheduler","kind":"List(O)(B)","subblock":[{"word":"extra_args","kind":"Map(O)","info":"Extra arguments that are added to the scheduler services"},{"word":"extra_binds","kind":"List(O)","info":"Extra binds added to the nodes"},{"word":"extra_env","kind":"List(O)","info":"Extra env is to provide extra env variable to the docker container running kubernetes service"},{"word":"image","kind":"String(O)","info":"Docker image of the scheduler service"}]},{"word":"ssh_agent_auth","kind":"Bool(O)","info":"SSH Agent Auth enable"},{"word":"ssh_key_path","kind":"String(O)","info":"SSH Private Key Path"},{"word":"system_images","kind":"List(O)(B)","info":"List of images used internally for proxy, cert download ,kubedns and more","subblock":[{"word":"alpine","kind":"String(O)"},{"word":"calico_cni","kind":"String(O)"},{"word":"calico_controllers","kind":"String(O)"},{"word":"calico_ctl","kind":"String(O)"},{"word":"calico_node","kind":"String(O)"},{"word":"canal_cni","kind":"String(O)"},{"word":"canal_flannel","kind":"String(O)"},{"word":"canal_node","kind":"String(O)"},{"word":"cert_downloader","kind":"String(O)"},{"word":"dnsmasq","kind":"String(O)"},{"word":"etcd","kind":"String(O)"},{"word":"flannel","kind":"String(O)"},{"word":"flannel_cni","kind":"String(O)"},{"word":"ingress","kind":"String(O)"},{"word":"ingress_backend","kind":"String(O)"},{"word":"kube_dns","kind":"String(O)"},{"word":"kube_dns_autoscaler","kind":"String(O)"},{"word":"kube_dns_sidecar","kind":"String(O)"},{"word":"kubernetes","kind":"String(O)"},{"word":"kubernetes_services_sidecar","kind":"String(O)"},{"word":"nginx_proxy","kind":"String(O)"},{"word":"pod_infra_container","kind":"String(O)"},{"word":"weave_cni","kind":"String(O)"},{"word":"weave_node","kind":"String(O)"}]}],"attributes":[{"word":"addon_job_timeout","kind":"Int","info":"Timeout in seconds for status check on addon deployment jobs"},{"word":"addons","kind":"String","info":"YAML manifest for user provided addons to be deployed on the cluster"},{"word":"addons_include","kind":"List","info":"List of urls or paths for addons"},{"word":"api_server_url","kind":"String"},{"word":"authentication","kind":"List(B)","info":"Authentication configuration used in the cluster","subblock":[{"word":"options","kind":"Map","info":"Authentication options"},{"word":"sans","kind":"List","info":"List of additional hostnames and IPs to include in the api server PKI cert"},{"word":"strategy","kind":"String","info":"Authentication strategy that will be used in kubernetes cluster"},{"word":"id","kind":"String"}]},{"word":"authorization","kind":"List(B)","info":"Authorization mode configuration used in the cluster","subblock":[{"word":"mode","kind":"String","info":"Authorization mode used by kubernetes"},{"word":"options","kind":"Map","info":"Authorization mode options"},{"word":"id","kind":"String"}]},{"word":"bastion_host","kind":"List(B)","info":"Bastion/Jump Host configuration","subblock":[{"word":"address","kind":"String","info":"Address of Bastion Host"},{"word":"port","kind":"Int","info":"SSH Port of Bastion Host"},{"word":"ssh_agent_auth","kind":"Bool","info":"SSH Agent Auth enable"},{"word":"ssh_key","kind":"String","info":"SSH Private Key"},{"word":"ssh_key_path","kind":"String","info":"SSH Private Key"},{"word":"user","kind":"String","info":"SSH User to Bastion Host"},{"word":"id","kind":"String"}]},{"word":"ca_crt","kind":"String"},{"word":"certificates","kind":"List(B)","subblock":[{"word":"certificate","kind":"String"},{"word":"common_name","kind":"String"},{"word":"config","kind":"String"},{"word":"config_env_name","kind":"String"},{"word":"config_path","kind":"String"},{"word":"env_name","kind":"String"},{"word":"id","kind":"String"},{"word":"key","kind":"String"},{"word":"key_env_name","kind":"String"},{"word":"key_path","kind":"String"},{"word":"name","kind":"String"},{"word":"ou_name","kind":"String"},{"word":"path","kind":"String"},{"word":"id","kind":"String"}]},{"word":"client_cert","kind":"String"},{"word":"client_key","kind":"String"},{"word":"cloud_provider","kind":"List(B)","info":"Cloud Provider options","subblock":[{"word":"aws_cloud_config","kind":"List(B)","info":"AWS cloud config file","subblock":[{"word":"id","kind":"String"}]},{"word":"azure_cloud_config","kind":"List(B)","info":"Azure cloud config file","subblock":[{"word":"aad_client_cert_password","kind":"String","info":"The password of the client certificate for an AAD application with RBAC access to talk to Azure RM APIs"},{"word":"aad_client_cert_path","kind":"String","info":"The path of a client certificate for an AAD application with RBAC access to talk to Azure RM APIs"},{"word":"aad_client_id","kind":"String","info":"The ClientID for an AAD application with RBAC access to talk to Azure RM APIs"},{"word":"aad_client_secret","kind":"String","info":"The ClientSecret for an AAD application with RBAC access to talk to Azure RM APIs"},{"word":"cloud","kind":"String","info":"The cloud environment identifier. Takes values from https://github.com/Azure/go-autorest/blob/ec5f4903f77ed9927ac95b19ab8e44ada64c1356/autorest/azure/environments.go#L13"},{"word":"cloud_provider_backoff","kind":"Bool","info":"Enable exponential backoff to manage resource request retries"},{"word":"cloud_provider_backoff_duration","kind":"Int","info":"Backoff duration"},{"word":"cloud_provider_backoff_exponent","kind":"Int","info":"Backoff exponent"},{"word":"cloud_provider_backoff_jitter","kind":"Int","info":"Backoff jitter"},{"word":"cloud_provider_backoff_retries","kind":"Int","info":"Backoff retry limit"},{"word":"cloud_provider_rate_limit","kind":"Bool","info":"Enable rate limiting"},{"word":"cloud_provider_rate_limit_bucket","kind":"Int","info":"Rate limit Bucket Size"},{"word":"cloud_provider_rate_limit_qps","kind":"Int","info":"Rate limit QPS"},{"word":"location","kind":"String","info":"The location of the resource group that the cluster is deployed in"},{"word":"maximum_load_balancer_rule_count","kind":"Int","info":"Maximum allowed LoadBalancer Rule Count is the limit enforced by Azure Load balancer"},{"word":"primary_availability_set_name","kind":"String","info":"The name of the availability set that should be used as the load balancer backendIf this is set, the Azure cloudprovider will only add nodes from that availability set to the loadbalancer backend pool. If this is not set, and multiple agent pools (availability sets) are used, thenthe cloudprovider will try to add all nodes to a single backend pool which is forbidden.In other words, if you use multiple agent pools (availability sets), you MUST set this field."},{"word":"primary_scale_set_name","kind":"String","info":"The name of the scale set that should be used as the load balancer backend.If this is set, the Azure cloudprovider will only add nodes from that scale set to the loadbalancer backend pool. If this is not set, and multiple agent pools (scale sets) are used, thenthe cloudprovider will try to add all nodes to a single backend pool which is forbidden.In other words, if you use multiple agent pools (scale sets), you MUST set this field."},{"word":"resource_group","kind":"String","info":"The name of the resource group that the cluster is deployed in"},{"word":"route_table_name","kind":"String","info":"(Optional in 1.6) The name of the route table attached to the subnet that the cluster is deployed in"},{"word":"subscription_id","kind":"String","info":"The ID of the Azure Subscription that the cluster is deployed in"},{"word":"tenant_id","kind":"String","info":"The AAD Tenant ID for the Subscription that the cluster is deployed in"},{"word":"use_instance_metadata","kind":"Bool","info":"Use instance metadata service where possible"},{"word":"use_managed_identity_extension","kind":"Bool","info":"Use managed service identity for the virtual machine to access Azure ARM APIs"},{"word":"vm_type","kind":"String","info":"The type of azure nodes. Candidate valudes are: vmss and standard. If not set, it will be default to standard."},{"word":"vnet_name","kind":"String","info":"The name of the VNet that the cluster is deployed in"},{"word":"vnet_resource_group","kind":"String","info":"The name of the resource group that the Vnet is deployed in"},{"word":"id","kind":"String"}]},{"word":"custom_cloud_config","kind":"String","info":"CustomCloudProvider is a multiline string that represent a custom cloud config file"},{"word":"name","kind":"String","info":"Name of the Cloud Provider"},{"word":"openstack_cloud_config","kind":"List(B)","info":"OpenStack cloud config file","subblock":[{"word":"block_storage","kind":"List(B)","subblock":[{"word":"bs_version","kind":"String"},{"word":"ignore_volume_az","kind":"Bool"},{"word":"trust_device_path","kind":"Bool"},{"word":"id","kind":"String"}]},{"word":"global","kind":"List(B)","subblock":[{"word":"auth_url","kind":"String"},{"word":"ca_file","kind":"String"},{"word":"domain_id","kind":"String"},{"word":"domain_name","kind":"String"},{"word":"password","kind":"String"},{"word":"region","kind":"String"},{"word":"tenant_id","kind":"String"},{"word":"tenant_name","kind":"String"},{"word":"trust_id","kind":"String"},{"word":"user_id","kind":"String"},{"word":"username","kind":"String"},{"word":"id","kind":"String"}]},{"word":"load_balancer","kind":"List(B)","subblock":[{"word":"create_monitor","kind":"Bool"},{"word":"floating_network_id","kind":"String"},{"word":"lb_method","kind":"String"},{"word":"lb_provider","kind":"String"},{"word":"lb_version","kind":"String"},{"word":"manage_security_groups","kind":"Bool"},{"word":"monitor_delay","kind":"Int"},{"word":"monitor_max_retries","kind":"Int"},{"word":"monitor_timeout","kind":"Int"},{"word":"subnet_id","kind":"String"},{"word":"use_octavia","kind":"Bool"},{"word":"id","kind":"String"}]},{"word":"metadata","kind":"List(B)","subblock":[{"word":"request_timeout","kind":"Int"},{"word":"search_order","kind":"String"},{"word":"id","kind":"String"}]},{"word":"route","kind":"List(B)","subblock":[{"word":"router_id","kind":"String"},{"word":"id","kind":"String"}]},{"word":"id","kind":"String"}]},{"word":"vsphere_cloud_config","kind":"List(B)","info":"Vsphere cloud config file","subblock":[{"word":"disk","kind":"List(B)","subblock":[{"word":"scsi_controller_type","kind":"String"},{"word":"id","kind":"String"}]},{"word":"global","kind":"List(B)","subblock":[{"word":"datacenter","kind":"String"},{"word":"datacenters","kind":"String"},{"word":"datastore","kind":"String"},{"word":"insecure_flag","kind":"Bool"},{"word":"password","kind":"String"},{"word":"port","kind":"String"},{"word":"server","kind":"String"},{"word":"soap_roundtrip_count","kind":"Int"},{"word":"user","kind":"String"},{"word":"vm_name","kind":"String"},{"word":"vm_uuid","kind":"String"},{"word":"working_dir","kind":"String"},{"word":"id","kind":"String"}]},{"word":"network","kind":"List(B)","subblock":[{"word":"public_network","kind":"String"},{"word":"id","kind":"String"}]},{"word":"virtual_center","kind":"List(B)","subblock":[{"word":"datacenters","kind":"String"},{"word":"password","kind":"String"},{"word":"port","kind":"String"},{"word":"server","kind":"String"},{"word":"soap_roundtrip_count","kind":"Int"},{"word":"user","kind":"String"},{"word":"id","kind":"String"}]},{"word":"workspace","kind":"List(B)","subblock":[{"word":"datacenter","kind":"String"},{"word":"default_datastore","kind":"String"},{"word":"folder","kind":"String"},{"word":"resourcepool_path","kind":"String"},{"word":"server","kind":"String"},{"word":"id","kind":"String"}]},{"word":"id","kind":"String"}]},{"word":"id","kind":"String"}]},{"word":"cluster_cidr","kind":"String"},{"word":"cluster_dns_server","kind":"String"},{"word":"cluster_domain","kind":"String"},{"word":"cluster_name","kind":"String","info":"Cluster Name used in the kube config"},{"word":"control_plane_hosts","kind":"List(B)","subblock":[{"word":"address","kind":"String"},{"word":"node_name","kind":"String"},{"word":"id","kind":"String"}]},{"word":"disable_port_check","kind":"Bool"},{"word":"etcd_hosts","kind":"List(B)","subblock":[{"word":"address","kind":"String"},{"word":"node_name","kind":"String"},{"word":"id","kind":"String"}]},{"word":"ignore_docker_version","kind":"Bool","info":"Enable/Disable strict docker version checking"},{"word":"inactive_hosts","kind":"List(B)","subblock":[{"word":"address","kind":"String"},{"word":"node_name","kind":"String"},{"word":"id","kind":"String"}]},{"word":"ingress","kind":"List(B)","info":"Ingress controller used in the cluster","subblock":[{"word":"extra_args","kind":"Map","info":"Ingress controller extra arguments"},{"word":"node_selector","kind":"Map","info":"Ingress controller used in the cluster"},{"word":"options","kind":"Map","info":"Ingress controller options"},{"word":"provider","kind":"String","info":"Ingress controller type used by kubernetes"},{"word":"id","kind":"String"}]},{"word":"kube_admin_user","kind":"String"},{"word":"kube_config_yaml","kind":"String"},{"word":"kubernetes_version","kind":"String","info":"Kubernetes version to use (if kubernetes image is specified, image version takes precedence)"},{"word":"network","kind":"List(B)","info":"Network configuration used in the kubernetes cluster","subblock":[{"word":"options","kind":"Map","info":"Plugin options to configure network properties"},{"word":"plugin","kind":"String","info":"Network Plugin That will be used in kubernetes cluster"},{"word":"id","kind":"String"}]},{"word":"nodes","kind":"List(B)","info":"Kubernetes nodes","subblock":[{"word":"address","kind":"String","info":"IP or FQDN that is fully resolvable and used for SSH communication"},{"word":"docker_socket","kind":"String","info":"Docker socket on the node that will be used in tunneling"},{"word":"hostname_override","kind":"String","info":"HostnameOverride"},{"word":"internal_address","kind":"String","info":"Internal address that will be used for components communication"},{"word":"labels","kind":"Map","info":"Node Labels"},{"word":"node_name","kind":"String","info":"Name of the host provisioned via docker machine"},{"word":"port","kind":"Int","info":"Port used for SSH communication"},{"word":"role","kind":"List","info":"Node role in kubernetes cluster [controlplane/worker/etcd])"},{"word":"roles","kind":"String","info":"Node role in kubernetes cluster [controlplane/worker/etcd], specified by a comma-separated string"},{"word":"ssh_agent_auth","kind":"Bool","info":"SSH Agent Auth enable"},{"word":"ssh_key","kind":"String","info":"SSH Private Key"},{"word":"ssh_key_path","kind":"String","info":"SSH Private Key"},{"word":"user","kind":"String","info":"SSH user that will be used by RKE"},{"word":"id","kind":"String"}]},{"word":"nodes_conf","kind":"List","info":"Kubernetes nodes(YAML or JSON)"},{"word":"prefix_path","kind":"String","info":"Kubernetes directory path"},{"word":"private_registries","kind":"List(B)","info":"List of private registries and their credentials","subblock":[{"word":"password","kind":"String","info":"Password for registry access"},{"word":"url","kind":"String","info":"URL for the registry"},{"word":"user","kind":"String","info":"User name for registry access"},{"word":"id","kind":"String"}]},{"word":"services_etcd","kind":"List(B)","subblock":[{"word":"ca_cert","kind":"String","info":"External CA certificate"},{"word":"cert","kind":"String","info":"External Client certificate"},{"word":"creation","kind":"String","info":"Etcd snapshot Creation period"},{"word":"external_urls","kind":"List","info":"List of etcd urls"},{"word":"extra_args","kind":"Map","info":"Extra arguments that are added to the etcd services"},{"word":"extra_binds","kind":"List","info":"Extra binds added to the nodes"},{"word":"extra_env","kind":"List","info":"Extra env is to provide extra env variable to the docker container running kubernetes service"},{"word":"image","kind":"String","info":"Docker image of the etcd service"},{"word":"key","kind":"String","info":"External Client key"},{"word":"path","kind":"String","info":"External etcd prefix"},{"word":"retention","kind":"String","info":"Etcd snapshot Retention period"},{"word":"snapshot","kind":"Bool","info":"Etcd Recurring snapshot Service"},{"word":"id","kind":"String"}]},{"word":"services_kube_api","kind":"List(B)","subblock":[{"word":"extra_args","kind":"Map","info":"Extra arguments that are added to the kube-api services"},{"word":"extra_binds","kind":"List","info":"Extra binds added to the nodes"},{"word":"extra_env","kind":"List","info":"Extra env is to provide extra env variable to the docker container running kubernetes service"},{"word":"image","kind":"String","info":"Docker image of the kube-api service"},{"word":"pod_security_policy","kind":"Bool","info":"Enabled/Disable PodSecurityPolicy"},{"word":"service_cluster_ip_range","kind":"String","info":"Virtual IP range that will be used by Kubernetes services"},{"word":"service_node_port_range","kind":"String","info":"Port range for services defined with NodePort type"},{"word":"id","kind":"String"}]},{"word":"services_kube_controller","kind":"List(B)","subblock":[{"word":"cluster_cidr","kind":"String","info":"CIDR Range for Pods in cluster"},{"word":"extra_args","kind":"Map","info":"Extra arguments that are added to the kube-controller services"},{"word":"extra_binds","kind":"List","info":"Extra binds added to the nodes"},{"word":"extra_env","kind":"List","info":"Extra env is to provide extra env variable to the docker container running kubernetes service"},{"word":"image","kind":"String","info":"Docker image of the kube-controller service"},{"word":"service_cluster_ip_range","kind":"String","info":"Virtual IP range that will be used by Kubernetes services"},{"word":"id","kind":"String"}]},{"word":"services_kubelet","kind":"List(B)","subblock":[{"word":"cluster_dns_server","kind":"String","info":"Cluster DNS service ip"},{"word":"cluster_domain","kind":"String","info":"Domain of the cluster (default: \"cluster.local\")"},{"word":"extra_args","kind":"Map","info":"Extra arguments that are added to the kubelet services"},{"word":"extra_binds","kind":"List","info":"Extra binds added to the nodes"},{"word":"extra_env","kind":"List","info":"Extra env is to provide extra env variable to the docker container running kubernetes service"},{"word":"fail_swap_on","kind":"Bool","info":"Fail if swap is enabled"},{"word":"image","kind":"String","info":"Docker image of the kubelet service"},{"word":"infra_container_image","kind":"String","info":"The image whose network/ipc namespaces containers in each pod will use"},{"word":"id","kind":"String"}]},{"word":"services_kubeproxy","kind":"List(B)","subblock":[{"word":"extra_args","kind":"Map","info":"Extra arguments that are added to the kubeproxy services"},{"word":"extra_binds","kind":"List","info":"Extra binds added to the nodes"},{"word":"extra_env","kind":"List","info":"Extra env is to provide extra env variable to the docker container running kubernetes service"},{"word":"image","kind":"String","info":"Docker image of the kubeproxy service"},{"word":"id","kind":"String"}]},{"word":"services_scheduler","kind":"List(B)","subblock":[{"word":"extra_args","kind":"Map","info":"Extra arguments that are added to the scheduler services"},{"word":"extra_binds","kind":"List","info":"Extra binds added to the nodes"},{"word":"extra_env","kind":"List","info":"Extra env is to provide extra env variable to the docker container running kubernetes service"},{"word":"image","kind":"String","info":"Docker image of the scheduler service"},{"word":"id","kind":"String"}]},{"word":"ssh_agent_auth","kind":"Bool","info":"SSH Agent Auth enable"},{"word":"ssh_key_path","kind":"String","info":"SSH Private Key Path"},{"word":"system_images","kind":"List(B)","info":"List of images used internally for proxy, cert download ,kubedns and more","subblock":[{"word":"alpine","kind":"String"},{"word":"calico_cni","kind":"String"},{"word":"calico_controllers","kind":"String"},{"word":"calico_ctl","kind":"String"},{"word":"calico_node","kind":"String"},{"word":"canal_cni","kind":"String"},{"word":"canal_flannel","kind":"String"},{"word":"canal_node","kind":"String"},{"word":"cert_downloader","kind":"String"},{"word":"dnsmasq","kind":"String"},{"word":"etcd","kind":"String"},{"word":"flannel","kind":"String"},{"word":"flannel_cni","kind":"String"},{"word":"ingress","kind":"String"},{"word":"ingress_backend","kind":"String"},{"word":"kube_dns","kind":"String"},{"word":"kube_dns_autoscaler","kind":"String"},{"word":"kube_dns_sidecar","kind":"String"},{"word":"kubernetes","kind":"String"},{"word":"kubernetes_services_sidecar","kind":"String"},{"word":"nginx_proxy","kind":"String"},{"word":"pod_infra_container","kind":"String"},{"word":"weave_cni","kind":"String"},{"word":"weave_node","kind":"String"},{"word":"id","kind":"String"}]},{"word":"worker_hosts","kind":"List(B)","subblock":[{"word":"address","kind":"String"},{"word":"node_name","kind":"String"},{"word":"id","kind":"String"}]},{"word":"id","kind":"String"}]}},"datas":{"node_parameter":{"arguments":[{"word":"address","kind":"String(R)","info":"IP or FQDN that is fully resolvable and used for SSH communication"},{"word":"docker_socket","kind":"String(O)","info":"Docker socket on the node that will be used in tunneling"},{"word":"hostname_override","kind":"String(O)","info":"HostnameOverride"},{"word":"internal_address","kind":"String(O)","info":"Internal address that will be used for components communication"},{"word":"labels","kind":"Map(O)","info":"Node Labels"},{"word":"node_name","kind":"String(O)","info":"Name of the host provisioned via docker machine"},{"word":"port","kind":"Int(O)","info":"Port used for SSH communication"},{"word":"role","kind":"List(O)","info":"Node role in kubernetes cluster [controlplane/worker/etcd])"},{"word":"roles","kind":"String(O)","info":"Node role in kubernetes cluster [controlplane/worker/etcd], specified by a comma-separated string"},{"word":"ssh_agent_auth","kind":"Bool(O)","info":"SSH Agent Auth enable"},{"word":"ssh_key","kind":"String(O)","info":"SSH Private Key"},{"word":"ssh_key_path","kind":"String(O)","info":"SSH Private Key"},{"word":"user","kind":"String(O)","info":"SSH user that will be used by RKE"}],"attributes":[{"word":"address","kind":"String","info":"IP or FQDN that is fully resolvable and used for SSH communication"},{"word":"docker_socket","kind":"String","info":"Docker socket on the node that will be used in tunneling"},{"word":"hostname_override","kind":"String","info":"HostnameOverride"},{"word":"internal_address","kind":"String","info":"Internal address that will be used for components communication"},{"word":"json","kind":"String","info":"RKE Node JSON"},{"word":"labels","kind":"Map","info":"Node Labels"},{"word":"node_name","kind":"String","info":"Name of the host provisioned via docker machine"},{"word":"port","kind":"Int","info":"Port used for SSH communication"},{"word":"role","kind":"List","info":"Node role in kubernetes cluster [controlplane/worker/etcd])"},{"word":"roles","kind":"String","info":"Node role in kubernetes cluster [controlplane/worker/etcd], specified by a comma-separated string"},{"word":"ssh_agent_auth","kind":"Bool","info":"SSH Agent Auth enable"},{"word":"ssh_key","kind":"String","info":"SSH Private Key"},{"word":"ssh_key_path","kind":"String","info":"SSH Private Key"},{"word":"user","kind":"String","info":"SSH user that will be used by RKE"},{"word":"yaml","kind":"String","info":"RKE Node YAML"},{"word":"id","kind":"String"}]}},"unknowns":{}}